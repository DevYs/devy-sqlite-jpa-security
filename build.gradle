plugins {
	id 'org.springframework.boot' version '2.3.1.RELEASE'
	id 'io.spring.dependency-management' version '1.0.9.RELEASE'
	id 'java'
}

/** Javadoc 설정 */
javadoc {
	source 'src.main.java'
	options.memberLevel = JavadocMemberLevel.PRIVATE
	options.encoding = 'UTF-8'
	options.addStringOption("locale","ko_KR");
	options.addStringOption("encoding","UTF-8");
	options.addStringOption("charset","UTF-8");
	options.addStringOption("docencoding","UTF-8")
}

group = 'devy.spring'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-jdbc'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.xerial:sqlite-jdbc:3.31.1'
	implementation 'com.zsoltfabok:sqlite-dialect:1.0'

	developmentOnly 'org.springframework.boot:spring-boot-devtools'

	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
	testImplementation 'org.springframework.security:spring-security-test'
}

test {
	useJUnitPlatform()
}

/** 실행, 빌드 설정 분리 */
ext.profile = (!project.hasProperty('profile') || !profile) ? 'local' : profile
sourceSets {
	main {
		resources {
			srcDirs "src/main/resources", "src/main/resources-${profile}/"
		}
	}
}

build {
	System.out.println("build for [${profile}] application.properties");
	version = "0.0.1-${profile}-SNAPSHOT"
}
